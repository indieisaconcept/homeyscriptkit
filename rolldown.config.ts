import alias from '@rollup/plugin-alias';
import glob from 'fast-glob';
import path from 'path';
import { defineConfig } from 'rolldown';
import type { ConfigExport, RolldownOptions } from 'rolldown';
import { minify } from 'rollup-plugin-swc3';

import pkg from './package.json';

const isProd = process.env.NODE_ENV === 'prod';
const scriptDir = process.env.SCRIPT_DIR ?? 'packages';

const packages = glob.sync(`${scriptDir}/*/index.{ts,js,min.js}`, {
  ignore: ['**/util.ts'],
});

const filename = (path: string): string =>
  path
    .replace(/\//g, '.')
    .replace(new RegExp(`^${scriptDir}\\.`), 'homeyscript.')
    .replace('index.ts', isProd ? 'min.js' : 'js');

const minifyPlugin = minify({
  module: true,
  // swc's minify option here
  mangle: {},
  compress: {},
  format: {
    preamble: `/* Generated by HomeyScriptKit@${pkg.version} on ${new Date().toISOString()} (https://github.com/indieisaconcept/homeyscriptkit) */\n`,
  },
});

const aliasPlugin = alias({
  entries: [
    {
      find: '@hsk',
      replacement: path.resolve(__dirname, './src/hsk'),
    },
  ],
});

const config = packages.map((path) => ({
  input: path,
  output: {
    file: `dist/${filename(path)}`,
    format: 'esm',
  },
  external: ['homey-api', 'lodash'],
  plugins: [aliasPlugin, ...(isProd ? [minifyPlugin] : [])],
})) as RolldownOptions[];

export default defineConfig(config) as ConfigExport;
